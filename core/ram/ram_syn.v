// megafunction wizard: %RAM: 1-PORT%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: altsyncram 

// ============================================================
// File Name: ram.v
// Megafunction Name(s):
// 			altsyncram
//
// Simulation Library Files(s):
// 			altera_mf
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 21.1.0 Build 842 10/21/2021 SJ Lite Edition
// ************************************************************


//Copyright (C) 2021  Intel Corporation. All rights reserved.
//Your use of Intel Corporation's design tools, logic functions 
//and other software and tools, and any partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Intel Program License 
//Subscription Agreement, the Intel Quartus Prime License Agreement,
//the Intel FPGA IP License Agreement, or other applicable license
//agreement, including, without limitation, that your use is for
//the sole purpose of programming logic devices manufactured by
//Intel and sold by Intel or its authorized distributors.  Please
//refer to the applicable agreement for further details, at
//https://fpgasoftware.intel.com/eula.


//altsyncram CLOCK_ENABLE_INPUT_A="NORMAL" CLOCK_ENABLE_OUTPUT_A="NORMAL" DEVICE_FAMILY="MAX 10" ENABLE_RUNTIME_MOD="NO" NUMWORDS_A=16384 OPERATION_MODE="SINGLE_PORT" OUTDATA_ACLR_A="NONE" OUTDATA_REG_A="CLOCK0" POWER_UP_UNINITIALIZED="TRUE" read_during_write_mode_port_a="DONT_CARE" WIDTH_A=8 WIDTH_BYTEENA_A=1 WIDTHAD_A=14 address_a clock0 clocken0 data_a q_a rden_a wren_a
//VERSION_BEGIN 21.1 cbx_altera_syncram_nd_impl 2021:10:21:11:02:24:SJ cbx_altsyncram 2021:10:21:11:02:24:SJ cbx_cycloneii 2021:10:21:11:02:24:SJ cbx_lpm_add_sub 2021:10:21:11:02:24:SJ cbx_lpm_compare 2021:10:21:11:02:24:SJ cbx_lpm_decode 2021:10:21:11:02:24:SJ cbx_lpm_mux 2021:10:21:11:02:24:SJ cbx_mgl 2021:10:21:11:11:47:SJ cbx_nadder 2021:10:21:11:02:24:SJ cbx_stratix 2021:10:21:11:02:24:SJ cbx_stratixii 2021:10:21:11:02:24:SJ cbx_stratixiii 2021:10:21:11:02:24:SJ cbx_stratixv 2021:10:21:11:02:24:SJ cbx_util_mgl 2021:10:21:11:02:24:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



//lpm_decode DEVICE_FAMILY="MAX 10" LPM_DECODES=2 LPM_WIDTH=1 data enable eq
//VERSION_BEGIN 21.1 cbx_cycloneii 2021:10:21:11:02:24:SJ cbx_lpm_add_sub 2021:10:21:11:02:24:SJ cbx_lpm_compare 2021:10:21:11:02:24:SJ cbx_lpm_decode 2021:10:21:11:02:24:SJ cbx_mgl 2021:10:21:11:11:47:SJ cbx_nadder 2021:10:21:11:02:24:SJ cbx_stratix 2021:10:21:11:02:24:SJ cbx_stratixii 2021:10:21:11:02:24:SJ  VERSION_END

//synthesis_resources = lut 1 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ram_decode
	( 
	data,
	enable,
	eq) /* synthesis synthesis_clearbox=1 */;
	input   [0:0]  data;
	input   enable;
	output   [1:0]  eq;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [0:0]  data;
	tri1   enable;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [1:0]  eq_node;

	assign
		eq = eq_node,
		eq_node = {(data & enable), ((~ data) & enable)};
endmodule //ram_decode


//lpm_mux DEVICE_FAMILY="MAX 10" LPM_SIZE=2 LPM_WIDTH=8 LPM_WIDTHS=1 data result sel
//VERSION_BEGIN 21.1 cbx_lpm_mux 2021:10:21:11:02:24:SJ cbx_mgl 2021:10:21:11:11:47:SJ  VERSION_END

//synthesis_resources = lut 8 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ram_mux
	( 
	data,
	result,
	sel) /* synthesis synthesis_clearbox=1 */;
	input   [15:0]  data;
	output   [7:0]  result;
	input   [0:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [15:0]  data;
	tri0   [0:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [7:0]  result_node;
	wire  [0:0]  sel_node;
	wire  [1:0]  w_data122w;
	wire  [1:0]  w_data136w;
	wire  [1:0]  w_data148w;
	wire  [1:0]  w_data160w;
	wire  [1:0]  w_data172w;
	wire  [1:0]  w_data184w;
	wire  [1:0]  w_data196w;
	wire  [1:0]  w_data208w;

	assign
		result = result_node,
		result_node = {((sel_node & w_data208w[1]) | ((~ sel_node) & w_data208w[0])), ((sel_node & w_data196w[1]) | ((~ sel_node) & w_data196w[0])), ((sel_node & w_data184w[1]) | ((~ sel_node) & w_data184w[0])), ((sel_node & w_data172w[1]) | ((~ sel_node) & w_data172w[0])), ((sel_node & w_data160w[1]) | ((~ sel_node) & w_data160w[0])), ((sel_node & w_data148w[1]) | ((~ sel_node) & w_data148w[0])), ((sel_node & w_data136w[1]) | ((~ sel_node) & w_data136w[0])), ((sel_node & w_data122w[1]) | ((~ sel_node) & w_data122w[0]))},
		sel_node = {sel[0]},
		w_data122w = {data[8], data[0]},
		w_data136w = {data[9], data[1]},
		w_data148w = {data[10], data[2]},
		w_data160w = {data[11], data[3]},
		w_data172w = {data[12], data[4]},
		w_data184w = {data[13], data[5]},
		w_data196w = {data[14], data[6]},
		w_data208w = {data[15], data[7]};
endmodule //ram_mux

//synthesis_resources = lut 9 M9K 16 reg 2 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"OPTIMIZE_POWER_DURING_SYNTHESIS=NORMAL_COMPILATION"} *)
module  ram_altsyncram
	( 
	address_a,
	clock0,
	clocken0,
	data_a,
	q_a,
	rden_a,
	wren_a) /* synthesis synthesis_clearbox=1 */;
	input   [13:0]  address_a;
	input   clock0;
	input   clocken0;
	input   [7:0]  data_a;
	output   [7:0]  q_a;
	input   rden_a;
	input   wren_a;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   clock0;
	tri1   clocken0;
	tri1   [7:0]  data_a;
	tri1   rden_a;
	tri0   wren_a;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[0:0]	address_reg_a;
	wire	wire_address_reg_a_ena;
	reg	[0:0]	out_address_reg_a;
	wire  [1:0]   wire_decode3_eq;
	wire  [7:0]   wire_mux2_result;
	wire  [0:0]   wire_ram_block1a_0portadataout;
	wire  [0:0]   wire_ram_block1a_1portadataout;
	wire  [0:0]   wire_ram_block1a_2portadataout;
	wire  [0:0]   wire_ram_block1a_3portadataout;
	wire  [0:0]   wire_ram_block1a_4portadataout;
	wire  [0:0]   wire_ram_block1a_5portadataout;
	wire  [0:0]   wire_ram_block1a_6portadataout;
	wire  [0:0]   wire_ram_block1a_7portadataout;
	wire  [0:0]   wire_ram_block1a_8portadataout;
	wire  [0:0]   wire_ram_block1a_9portadataout;
	wire  [0:0]   wire_ram_block1a_10portadataout;
	wire  [0:0]   wire_ram_block1a_11portadataout;
	wire  [0:0]   wire_ram_block1a_12portadataout;
	wire  [0:0]   wire_ram_block1a_13portadataout;
	wire  [0:0]   wire_ram_block1a_14portadataout;
	wire  [0:0]   wire_ram_block1a_15portadataout;
	wire  [0:0]  address_a_sel;
	wire  [13:0]  address_a_wire;

	// synopsys translate_off
	initial
		address_reg_a = 0;
	// synopsys translate_on
	always @ ( posedge clock0)
		if (wire_address_reg_a_ena == 1'b1)   address_reg_a <= address_a_sel;
	assign
		wire_address_reg_a_ena = (rden_a & clocken0);
	// synopsys translate_off
	initial
		out_address_reg_a = 0;
	// synopsys translate_on
	always @ ( posedge clock0)
		if (clocken0 == 1'b1)   out_address_reg_a <= address_reg_a;
	ram_decode   decode3
	( 
	.data(address_a_wire[13]),
	.enable(wren_a),
	.eq(wire_decode3_eq));
	ram_mux   mux2
	( 
	.data({wire_ram_block1a_15portadataout[0], wire_ram_block1a_14portadataout[0], wire_ram_block1a_13portadataout[0], wire_ram_block1a_12portadataout[0], wire_ram_block1a_11portadataout[0], wire_ram_block1a_10portadataout[0], wire_ram_block1a_9portadataout[0], wire_ram_block1a_8portadataout[0], wire_ram_block1a_7portadataout[0], wire_ram_block1a_6portadataout[0], wire_ram_block1a_5portadataout[0], wire_ram_block1a_4portadataout[0], wire_ram_block1a_3portadataout[0], wire_ram_block1a_2portadataout[0], wire_ram_block1a_1portadataout[0], wire_ram_block1a_0portadataout[0]}),
	.result(wire_mux2_result),
	.sel(out_address_reg_a));
	fiftyfivenm_ram_block   ram_block1a_0
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[0]}),
	.portadataout(wire_ram_block1a_0portadataout[0:0]),
	.portare(rden_a),
	.portawe(wire_decode3_eq[0]),
	.portbdataout()
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddr({1{1'b0}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbre(1'b1),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block1a_0.clk0_core_clock_enable = "ena0",
		ram_block1a_0.clk0_input_clock_enable = "ena0",
		ram_block1a_0.clk0_output_clock_enable = "ena0",
		ram_block1a_0.connectivity_checking = "OFF",
		ram_block1a_0.logical_ram_name = "ALTSYNCRAM",
		ram_block1a_0.operation_mode = "single_port",
		ram_block1a_0.port_a_address_width = 13,
		ram_block1a_0.port_a_byte_enable_mask_width = 1,
		ram_block1a_0.port_a_byte_size = 1,
		ram_block1a_0.port_a_data_out_clear = "none",
		ram_block1a_0.port_a_data_out_clock = "clock0",
		ram_block1a_0.port_a_data_width = 1,
		ram_block1a_0.port_a_first_address = 0,
		ram_block1a_0.port_a_first_bit_number = 0,
		ram_block1a_0.port_a_last_address = 8191,
		ram_block1a_0.port_a_logical_ram_depth = 16384,
		ram_block1a_0.port_a_logical_ram_width = 8,
		ram_block1a_0.power_up_uninitialized = "true",
		ram_block1a_0.ram_block_type = "AUTO",
		ram_block1a_0.lpm_type = "fiftyfivenm_ram_block";
	fiftyfivenm_ram_block   ram_block1a_1
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[1]}),
	.portadataout(wire_ram_block1a_1portadataout[0:0]),
	.portare(rden_a),
	.portawe(wire_decode3_eq[0]),
	.portbdataout()
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddr({1{1'b0}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbre(1'b1),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block1a_1.clk0_core_clock_enable = "ena0",
		ram_block1a_1.clk0_input_clock_enable = "ena0",
		ram_block1a_1.clk0_output_clock_enable = "ena0",
		ram_block1a_1.connectivity_checking = "OFF",
		ram_block1a_1.logical_ram_name = "ALTSYNCRAM",
		ram_block1a_1.operation_mode = "single_port",
		ram_block1a_1.port_a_address_width = 13,
		ram_block1a_1.port_a_byte_enable_mask_width = 1,
		ram_block1a_1.port_a_byte_size = 1,
		ram_block1a_1.port_a_data_out_clear = "none",
		ram_block1a_1.port_a_data_out_clock = "clock0",
		ram_block1a_1.port_a_data_width = 1,
		ram_block1a_1.port_a_first_address = 0,
		ram_block1a_1.port_a_first_bit_number = 1,
		ram_block1a_1.port_a_last_address = 8191,
		ram_block1a_1.port_a_logical_ram_depth = 16384,
		ram_block1a_1.port_a_logical_ram_width = 8,
		ram_block1a_1.power_up_uninitialized = "true",
		ram_block1a_1.ram_block_type = "AUTO",
		ram_block1a_1.lpm_type = "fiftyfivenm_ram_block";
	fiftyfivenm_ram_block   ram_block1a_2
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[2]}),
	.portadataout(wire_ram_block1a_2portadataout[0:0]),
	.portare(rden_a),
	.portawe(wire_decode3_eq[0]),
	.portbdataout()
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddr({1{1'b0}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbre(1'b1),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block1a_2.clk0_core_clock_enable = "ena0",
		ram_block1a_2.clk0_input_clock_enable = "ena0",
		ram_block1a_2.clk0_output_clock_enable = "ena0",
		ram_block1a_2.connectivity_checking = "OFF",
		ram_block1a_2.logical_ram_name = "ALTSYNCRAM",
		ram_block1a_2.operation_mode = "single_port",
		ram_block1a_2.port_a_address_width = 13,
		ram_block1a_2.port_a_byte_enable_mask_width = 1,
		ram_block1a_2.port_a_byte_size = 1,
		ram_block1a_2.port_a_data_out_clear = "none",
		ram_block1a_2.port_a_data_out_clock = "clock0",
		ram_block1a_2.port_a_data_width = 1,
		ram_block1a_2.port_a_first_address = 0,
		ram_block1a_2.port_a_first_bit_number = 2,
		ram_block1a_2.port_a_last_address = 8191,
		ram_block1a_2.port_a_logical_ram_depth = 16384,
		ram_block1a_2.port_a_logical_ram_width = 8,
		ram_block1a_2.power_up_uninitialized = "true",
		ram_block1a_2.ram_block_type = "AUTO",
		ram_block1a_2.lpm_type = "fiftyfivenm_ram_block";
	fiftyfivenm_ram_block   ram_block1a_3
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[3]}),
	.portadataout(wire_ram_block1a_3portadataout[0:0]),
	.portare(rden_a),
	.portawe(wire_decode3_eq[0]),
	.portbdataout()
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddr({1{1'b0}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbre(1'b1),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block1a_3.clk0_core_clock_enable = "ena0",
		ram_block1a_3.clk0_input_clock_enable = "ena0",
		ram_block1a_3.clk0_output_clock_enable = "ena0",
		ram_block1a_3.connectivity_checking = "OFF",
		ram_block1a_3.logical_ram_name = "ALTSYNCRAM",
		ram_block1a_3.operation_mode = "single_port",
		ram_block1a_3.port_a_address_width = 13,
		ram_block1a_3.port_a_byte_enable_mask_width = 1,
		ram_block1a_3.port_a_byte_size = 1,
		ram_block1a_3.port_a_data_out_clear = "none",
		ram_block1a_3.port_a_data_out_clock = "clock0",
		ram_block1a_3.port_a_data_width = 1,
		ram_block1a_3.port_a_first_address = 0,
		ram_block1a_3.port_a_first_bit_number = 3,
		ram_block1a_3.port_a_last_address = 8191,
		ram_block1a_3.port_a_logical_ram_depth = 16384,
		ram_block1a_3.port_a_logical_ram_width = 8,
		ram_block1a_3.power_up_uninitialized = "true",
		ram_block1a_3.ram_block_type = "AUTO",
		ram_block1a_3.lpm_type = "fiftyfivenm_ram_block";
	fiftyfivenm_ram_block   ram_block1a_4
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[4]}),
	.portadataout(wire_ram_block1a_4portadataout[0:0]),
	.portare(rden_a),
	.portawe(wire_decode3_eq[0]),
	.portbdataout()
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddr({1{1'b0}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbre(1'b1),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block1a_4.clk0_core_clock_enable = "ena0",
		ram_block1a_4.clk0_input_clock_enable = "ena0",
		ram_block1a_4.clk0_output_clock_enable = "ena0",
		ram_block1a_4.connectivity_checking = "OFF",
		ram_block1a_4.logical_ram_name = "ALTSYNCRAM",
		ram_block1a_4.operation_mode = "single_port",
		ram_block1a_4.port_a_address_width = 13,
		ram_block1a_4.port_a_byte_enable_mask_width = 1,
		ram_block1a_4.port_a_byte_size = 1,
		ram_block1a_4.port_a_data_out_clear = "none",
		ram_block1a_4.port_a_data_out_clock = "clock0",
		ram_block1a_4.port_a_data_width = 1,
		ram_block1a_4.port_a_first_address = 0,
		ram_block1a_4.port_a_first_bit_number = 4,
		ram_block1a_4.port_a_last_address = 8191,
		ram_block1a_4.port_a_logical_ram_depth = 16384,
		ram_block1a_4.port_a_logical_ram_width = 8,
		ram_block1a_4.power_up_uninitialized = "true",
		ram_block1a_4.ram_block_type = "AUTO",
		ram_block1a_4.lpm_type = "fiftyfivenm_ram_block";
	fiftyfivenm_ram_block   ram_block1a_5
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[5]}),
	.portadataout(wire_ram_block1a_5portadataout[0:0]),
	.portare(rden_a),
	.portawe(wire_decode3_eq[0]),
	.portbdataout()
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddr({1{1'b0}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbre(1'b1),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block1a_5.clk0_core_clock_enable = "ena0",
		ram_block1a_5.clk0_input_clock_enable = "ena0",
		ram_block1a_5.clk0_output_clock_enable = "ena0",
		ram_block1a_5.connectivity_checking = "OFF",
		ram_block1a_5.logical_ram_name = "ALTSYNCRAM",
		ram_block1a_5.operation_mode = "single_port",
		ram_block1a_5.port_a_address_width = 13,
		ram_block1a_5.port_a_byte_enable_mask_width = 1,
		ram_block1a_5.port_a_byte_size = 1,
		ram_block1a_5.port_a_data_out_clear = "none",
		ram_block1a_5.port_a_data_out_clock = "clock0",
		ram_block1a_5.port_a_data_width = 1,
		ram_block1a_5.port_a_first_address = 0,
		ram_block1a_5.port_a_first_bit_number = 5,
		ram_block1a_5.port_a_last_address = 8191,
		ram_block1a_5.port_a_logical_ram_depth = 16384,
		ram_block1a_5.port_a_logical_ram_width = 8,
		ram_block1a_5.power_up_uninitialized = "true",
		ram_block1a_5.ram_block_type = "AUTO",
		ram_block1a_5.lpm_type = "fiftyfivenm_ram_block";
	fiftyfivenm_ram_block   ram_block1a_6
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[6]}),
	.portadataout(wire_ram_block1a_6portadataout[0:0]),
	.portare(rden_a),
	.portawe(wire_decode3_eq[0]),
	.portbdataout()
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddr({1{1'b0}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbre(1'b1),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block1a_6.clk0_core_clock_enable = "ena0",
		ram_block1a_6.clk0_input_clock_enable = "ena0",
		ram_block1a_6.clk0_output_clock_enable = "ena0",
		ram_block1a_6.connectivity_checking = "OFF",
		ram_block1a_6.logical_ram_name = "ALTSYNCRAM",
		ram_block1a_6.operation_mode = "single_port",
		ram_block1a_6.port_a_address_width = 13,
		ram_block1a_6.port_a_byte_enable_mask_width = 1,
		ram_block1a_6.port_a_byte_size = 1,
		ram_block1a_6.port_a_data_out_clear = "none",
		ram_block1a_6.port_a_data_out_clock = "clock0",
		ram_block1a_6.port_a_data_width = 1,
		ram_block1a_6.port_a_first_address = 0,
		ram_block1a_6.port_a_first_bit_number = 6,
		ram_block1a_6.port_a_last_address = 8191,
		ram_block1a_6.port_a_logical_ram_depth = 16384,
		ram_block1a_6.port_a_logical_ram_width = 8,
		ram_block1a_6.power_up_uninitialized = "true",
		ram_block1a_6.ram_block_type = "AUTO",
		ram_block1a_6.lpm_type = "fiftyfivenm_ram_block";
	fiftyfivenm_ram_block   ram_block1a_7
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[7]}),
	.portadataout(wire_ram_block1a_7portadataout[0:0]),
	.portare(rden_a),
	.portawe(wire_decode3_eq[0]),
	.portbdataout()
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddr({1{1'b0}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbre(1'b1),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block1a_7.clk0_core_clock_enable = "ena0",
		ram_block1a_7.clk0_input_clock_enable = "ena0",
		ram_block1a_7.clk0_output_clock_enable = "ena0",
		ram_block1a_7.connectivity_checking = "OFF",
		ram_block1a_7.logical_ram_name = "ALTSYNCRAM",
		ram_block1a_7.operation_mode = "single_port",
		ram_block1a_7.port_a_address_width = 13,
		ram_block1a_7.port_a_byte_enable_mask_width = 1,
		ram_block1a_7.port_a_byte_size = 1,
		ram_block1a_7.port_a_data_out_clear = "none",
		ram_block1a_7.port_a_data_out_clock = "clock0",
		ram_block1a_7.port_a_data_width = 1,
		ram_block1a_7.port_a_first_address = 0,
		ram_block1a_7.port_a_first_bit_number = 7,
		ram_block1a_7.port_a_last_address = 8191,
		ram_block1a_7.port_a_logical_ram_depth = 16384,
		ram_block1a_7.port_a_logical_ram_width = 8,
		ram_block1a_7.power_up_uninitialized = "true",
		ram_block1a_7.ram_block_type = "AUTO",
		ram_block1a_7.lpm_type = "fiftyfivenm_ram_block";
	fiftyfivenm_ram_block   ram_block1a_8
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[0]}),
	.portadataout(wire_ram_block1a_8portadataout[0:0]),
	.portare(rden_a),
	.portawe(wire_decode3_eq[1]),
	.portbdataout()
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddr({1{1'b0}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbre(1'b1),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block1a_8.clk0_core_clock_enable = "ena0",
		ram_block1a_8.clk0_input_clock_enable = "ena0",
		ram_block1a_8.clk0_output_clock_enable = "ena0",
		ram_block1a_8.connectivity_checking = "OFF",
		ram_block1a_8.logical_ram_name = "ALTSYNCRAM",
		ram_block1a_8.operation_mode = "single_port",
		ram_block1a_8.port_a_address_width = 13,
		ram_block1a_8.port_a_byte_enable_mask_width = 1,
		ram_block1a_8.port_a_byte_size = 1,
		ram_block1a_8.port_a_data_out_clear = "none",
		ram_block1a_8.port_a_data_out_clock = "clock0",
		ram_block1a_8.port_a_data_width = 1,
		ram_block1a_8.port_a_first_address = 8192,
		ram_block1a_8.port_a_first_bit_number = 0,
		ram_block1a_8.port_a_last_address = 16383,
		ram_block1a_8.port_a_logical_ram_depth = 16384,
		ram_block1a_8.port_a_logical_ram_width = 8,
		ram_block1a_8.power_up_uninitialized = "true",
		ram_block1a_8.ram_block_type = "AUTO",
		ram_block1a_8.lpm_type = "fiftyfivenm_ram_block";
	fiftyfivenm_ram_block   ram_block1a_9
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[1]}),
	.portadataout(wire_ram_block1a_9portadataout[0:0]),
	.portare(rden_a),
	.portawe(wire_decode3_eq[1]),
	.portbdataout()
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddr({1{1'b0}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbre(1'b1),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block1a_9.clk0_core_clock_enable = "ena0",
		ram_block1a_9.clk0_input_clock_enable = "ena0",
		ram_block1a_9.clk0_output_clock_enable = "ena0",
		ram_block1a_9.connectivity_checking = "OFF",
		ram_block1a_9.logical_ram_name = "ALTSYNCRAM",
		ram_block1a_9.operation_mode = "single_port",
		ram_block1a_9.port_a_address_width = 13,
		ram_block1a_9.port_a_byte_enable_mask_width = 1,
		ram_block1a_9.port_a_byte_size = 1,
		ram_block1a_9.port_a_data_out_clear = "none",
		ram_block1a_9.port_a_data_out_clock = "clock0",
		ram_block1a_9.port_a_data_width = 1,
		ram_block1a_9.port_a_first_address = 8192,
		ram_block1a_9.port_a_first_bit_number = 1,
		ram_block1a_9.port_a_last_address = 16383,
		ram_block1a_9.port_a_logical_ram_depth = 16384,
		ram_block1a_9.port_a_logical_ram_width = 8,
		ram_block1a_9.power_up_uninitialized = "true",
		ram_block1a_9.ram_block_type = "AUTO",
		ram_block1a_9.lpm_type = "fiftyfivenm_ram_block";
	fiftyfivenm_ram_block   ram_block1a_10
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[2]}),
	.portadataout(wire_ram_block1a_10portadataout[0:0]),
	.portare(rden_a),
	.portawe(wire_decode3_eq[1]),
	.portbdataout()
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddr({1{1'b0}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbre(1'b1),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block1a_10.clk0_core_clock_enable = "ena0",
		ram_block1a_10.clk0_input_clock_enable = "ena0",
		ram_block1a_10.clk0_output_clock_enable = "ena0",
		ram_block1a_10.connectivity_checking = "OFF",
		ram_block1a_10.logical_ram_name = "ALTSYNCRAM",
		ram_block1a_10.operation_mode = "single_port",
		ram_block1a_10.port_a_address_width = 13,
		ram_block1a_10.port_a_byte_enable_mask_width = 1,
		ram_block1a_10.port_a_byte_size = 1,
		ram_block1a_10.port_a_data_out_clear = "none",
		ram_block1a_10.port_a_data_out_clock = "clock0",
		ram_block1a_10.port_a_data_width = 1,
		ram_block1a_10.port_a_first_address = 8192,
		ram_block1a_10.port_a_first_bit_number = 2,
		ram_block1a_10.port_a_last_address = 16383,
		ram_block1a_10.port_a_logical_ram_depth = 16384,
		ram_block1a_10.port_a_logical_ram_width = 8,
		ram_block1a_10.power_up_uninitialized = "true",
		ram_block1a_10.ram_block_type = "AUTO",
		ram_block1a_10.lpm_type = "fiftyfivenm_ram_block";
	fiftyfivenm_ram_block   ram_block1a_11
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[3]}),
	.portadataout(wire_ram_block1a_11portadataout[0:0]),
	.portare(rden_a),
	.portawe(wire_decode3_eq[1]),
	.portbdataout()
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddr({1{1'b0}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbre(1'b1),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block1a_11.clk0_core_clock_enable = "ena0",
		ram_block1a_11.clk0_input_clock_enable = "ena0",
		ram_block1a_11.clk0_output_clock_enable = "ena0",
		ram_block1a_11.connectivity_checking = "OFF",
		ram_block1a_11.logical_ram_name = "ALTSYNCRAM",
		ram_block1a_11.operation_mode = "single_port",
		ram_block1a_11.port_a_address_width = 13,
		ram_block1a_11.port_a_byte_enable_mask_width = 1,
		ram_block1a_11.port_a_byte_size = 1,
		ram_block1a_11.port_a_data_out_clear = "none",
		ram_block1a_11.port_a_data_out_clock = "clock0",
		ram_block1a_11.port_a_data_width = 1,
		ram_block1a_11.port_a_first_address = 8192,
		ram_block1a_11.port_a_first_bit_number = 3,
		ram_block1a_11.port_a_last_address = 16383,
		ram_block1a_11.port_a_logical_ram_depth = 16384,
		ram_block1a_11.port_a_logical_ram_width = 8,
		ram_block1a_11.power_up_uninitialized = "true",
		ram_block1a_11.ram_block_type = "AUTO",
		ram_block1a_11.lpm_type = "fiftyfivenm_ram_block";
	fiftyfivenm_ram_block   ram_block1a_12
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[4]}),
	.portadataout(wire_ram_block1a_12portadataout[0:0]),
	.portare(rden_a),
	.portawe(wire_decode3_eq[1]),
	.portbdataout()
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddr({1{1'b0}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbre(1'b1),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block1a_12.clk0_core_clock_enable = "ena0",
		ram_block1a_12.clk0_input_clock_enable = "ena0",
		ram_block1a_12.clk0_output_clock_enable = "ena0",
		ram_block1a_12.connectivity_checking = "OFF",
		ram_block1a_12.logical_ram_name = "ALTSYNCRAM",
		ram_block1a_12.operation_mode = "single_port",
		ram_block1a_12.port_a_address_width = 13,
		ram_block1a_12.port_a_byte_enable_mask_width = 1,
		ram_block1a_12.port_a_byte_size = 1,
		ram_block1a_12.port_a_data_out_clear = "none",
		ram_block1a_12.port_a_data_out_clock = "clock0",
		ram_block1a_12.port_a_data_width = 1,
		ram_block1a_12.port_a_first_address = 8192,
		ram_block1a_12.port_a_first_bit_number = 4,
		ram_block1a_12.port_a_last_address = 16383,
		ram_block1a_12.port_a_logical_ram_depth = 16384,
		ram_block1a_12.port_a_logical_ram_width = 8,
		ram_block1a_12.power_up_uninitialized = "true",
		ram_block1a_12.ram_block_type = "AUTO",
		ram_block1a_12.lpm_type = "fiftyfivenm_ram_block";
	fiftyfivenm_ram_block   ram_block1a_13
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[5]}),
	.portadataout(wire_ram_block1a_13portadataout[0:0]),
	.portare(rden_a),
	.portawe(wire_decode3_eq[1]),
	.portbdataout()
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddr({1{1'b0}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbre(1'b1),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block1a_13.clk0_core_clock_enable = "ena0",
		ram_block1a_13.clk0_input_clock_enable = "ena0",
		ram_block1a_13.clk0_output_clock_enable = "ena0",
		ram_block1a_13.connectivity_checking = "OFF",
		ram_block1a_13.logical_ram_name = "ALTSYNCRAM",
		ram_block1a_13.operation_mode = "single_port",
		ram_block1a_13.port_a_address_width = 13,
		ram_block1a_13.port_a_byte_enable_mask_width = 1,
		ram_block1a_13.port_a_byte_size = 1,
		ram_block1a_13.port_a_data_out_clear = "none",
		ram_block1a_13.port_a_data_out_clock = "clock0",
		ram_block1a_13.port_a_data_width = 1,
		ram_block1a_13.port_a_first_address = 8192,
		ram_block1a_13.port_a_first_bit_number = 5,
		ram_block1a_13.port_a_last_address = 16383,
		ram_block1a_13.port_a_logical_ram_depth = 16384,
		ram_block1a_13.port_a_logical_ram_width = 8,
		ram_block1a_13.power_up_uninitialized = "true",
		ram_block1a_13.ram_block_type = "AUTO",
		ram_block1a_13.lpm_type = "fiftyfivenm_ram_block";
	fiftyfivenm_ram_block   ram_block1a_14
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[6]}),
	.portadataout(wire_ram_block1a_14portadataout[0:0]),
	.portare(rden_a),
	.portawe(wire_decode3_eq[1]),
	.portbdataout()
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddr({1{1'b0}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbre(1'b1),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block1a_14.clk0_core_clock_enable = "ena0",
		ram_block1a_14.clk0_input_clock_enable = "ena0",
		ram_block1a_14.clk0_output_clock_enable = "ena0",
		ram_block1a_14.connectivity_checking = "OFF",
		ram_block1a_14.logical_ram_name = "ALTSYNCRAM",
		ram_block1a_14.operation_mode = "single_port",
		ram_block1a_14.port_a_address_width = 13,
		ram_block1a_14.port_a_byte_enable_mask_width = 1,
		ram_block1a_14.port_a_byte_size = 1,
		ram_block1a_14.port_a_data_out_clear = "none",
		ram_block1a_14.port_a_data_out_clock = "clock0",
		ram_block1a_14.port_a_data_width = 1,
		ram_block1a_14.port_a_first_address = 8192,
		ram_block1a_14.port_a_first_bit_number = 6,
		ram_block1a_14.port_a_last_address = 16383,
		ram_block1a_14.port_a_logical_ram_depth = 16384,
		ram_block1a_14.port_a_logical_ram_width = 8,
		ram_block1a_14.power_up_uninitialized = "true",
		ram_block1a_14.ram_block_type = "AUTO",
		ram_block1a_14.lpm_type = "fiftyfivenm_ram_block";
	fiftyfivenm_ram_block   ram_block1a_15
	( 
	.clk0(clock0),
	.ena0(clocken0),
	.portaaddr({address_a_wire[12:0]}),
	.portadatain({data_a[7]}),
	.portadataout(wire_ram_block1a_15portadataout[0:0]),
	.portare(rden_a),
	.portawe(wire_decode3_eq[1]),
	.portbdataout()
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clk1(1'b0),
	.clr0(1'b0),
	.clr1(1'b0),
	.ena1(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portbaddr({1{1'b0}}),
	.portbaddrstall(1'b0),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbre(1'b1),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block1a_15.clk0_core_clock_enable = "ena0",
		ram_block1a_15.clk0_input_clock_enable = "ena0",
		ram_block1a_15.clk0_output_clock_enable = "ena0",
		ram_block1a_15.connectivity_checking = "OFF",
		ram_block1a_15.logical_ram_name = "ALTSYNCRAM",
		ram_block1a_15.operation_mode = "single_port",
		ram_block1a_15.port_a_address_width = 13,
		ram_block1a_15.port_a_byte_enable_mask_width = 1,
		ram_block1a_15.port_a_byte_size = 1,
		ram_block1a_15.port_a_data_out_clear = "none",
		ram_block1a_15.port_a_data_out_clock = "clock0",
		ram_block1a_15.port_a_data_width = 1,
		ram_block1a_15.port_a_first_address = 8192,
		ram_block1a_15.port_a_first_bit_number = 7,
		ram_block1a_15.port_a_last_address = 16383,
		ram_block1a_15.port_a_logical_ram_depth = 16384,
		ram_block1a_15.port_a_logical_ram_width = 8,
		ram_block1a_15.power_up_uninitialized = "true",
		ram_block1a_15.ram_block_type = "AUTO",
		ram_block1a_15.lpm_type = "fiftyfivenm_ram_block";
	assign
		address_a_sel = address_a[13],
		address_a_wire = address_a,
		q_a = wire_mux2_result;
endmodule //ram_altsyncram
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module ram (
	address,
	clken,
	clock,
	data,
	rden,
	wren,
	q)/* synthesis synthesis_clearbox = 1 */;

	input	[13:0]  address;
	input	  clken;
	input	  clock;
	input	[7:0]  data;
	input	  rden;
	input	  wren;
	output	[7:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1	  clken;
	tri1	  clock;
	tri1	  rden;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire [7:0] sub_wire0;
	wire [7:0] q = sub_wire0[7:0];

	ram_altsyncram	ram_altsyncram_component (
				.address_a (address),
				.clock0 (clock),
				.clocken0 (clken),
				.data_a (data),
				.rden_a (rden),
				.wren_a (wren),
				.q_a (sub_wire0));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: ADDRESSSTALL_A NUMERIC "0"
// Retrieval info: PRIVATE: AclrAddr NUMERIC "0"
// Retrieval info: PRIVATE: AclrByte NUMERIC "0"
// Retrieval info: PRIVATE: AclrData NUMERIC "0"
// Retrieval info: PRIVATE: AclrOutput NUMERIC "0"
// Retrieval info: PRIVATE: BYTE_ENABLE NUMERIC "0"
// Retrieval info: PRIVATE: BYTE_SIZE NUMERIC "8"
// Retrieval info: PRIVATE: BlankMemory NUMERIC "1"
// Retrieval info: PRIVATE: CLOCK_ENABLE_INPUT_A NUMERIC "1"
// Retrieval info: PRIVATE: CLOCK_ENABLE_OUTPUT_A NUMERIC "1"
// Retrieval info: PRIVATE: Clken NUMERIC "1"
// Retrieval info: PRIVATE: DataBusSeparated NUMERIC "1"
// Retrieval info: PRIVATE: IMPLEMENT_IN_LES NUMERIC "0"
// Retrieval info: PRIVATE: INIT_FILE_LAYOUT STRING "PORT_A"
// Retrieval info: PRIVATE: INIT_TO_SIM_X NUMERIC "1"
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "MAX 10"
// Retrieval info: PRIVATE: JTAG_ENABLED NUMERIC "0"
// Retrieval info: PRIVATE: JTAG_ID STRING "NONE"
// Retrieval info: PRIVATE: MAXIMUM_DEPTH NUMERIC "0"
// Retrieval info: PRIVATE: MIFfilename STRING ""
// Retrieval info: PRIVATE: NUMWORDS_A NUMERIC "16384"
// Retrieval info: PRIVATE: RAM_BLOCK_TYPE NUMERIC "0"
// Retrieval info: PRIVATE: READ_DURING_WRITE_MODE_PORT_A NUMERIC "2"
// Retrieval info: PRIVATE: RegAddr NUMERIC "1"
// Retrieval info: PRIVATE: RegData NUMERIC "1"
// Retrieval info: PRIVATE: RegOutput NUMERIC "1"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "1"
// Retrieval info: PRIVATE: SingleClock NUMERIC "1"
// Retrieval info: PRIVATE: UseDQRAM NUMERIC "1"
// Retrieval info: PRIVATE: WRCONTROL_ACLR_A NUMERIC "0"
// Retrieval info: PRIVATE: WidthAddr NUMERIC "14"
// Retrieval info: PRIVATE: WidthData NUMERIC "8"
// Retrieval info: PRIVATE: rden NUMERIC "1"
// Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
// Retrieval info: CONSTANT: CLOCK_ENABLE_INPUT_A STRING "NORMAL"
// Retrieval info: CONSTANT: CLOCK_ENABLE_OUTPUT_A STRING "NORMAL"
// Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "MAX 10"
// Retrieval info: CONSTANT: LPM_HINT STRING "ENABLE_RUNTIME_MOD=NO"
// Retrieval info: CONSTANT: LPM_TYPE STRING "altsyncram"
// Retrieval info: CONSTANT: NUMWORDS_A NUMERIC "16384"
// Retrieval info: CONSTANT: OPERATION_MODE STRING "SINGLE_PORT"
// Retrieval info: CONSTANT: OUTDATA_ACLR_A STRING "NONE"
// Retrieval info: CONSTANT: OUTDATA_REG_A STRING "CLOCK0"
// Retrieval info: CONSTANT: POWER_UP_UNINITIALIZED STRING "TRUE"
// Retrieval info: CONSTANT: READ_DURING_WRITE_MODE_PORT_A STRING "DONT_CARE"
// Retrieval info: CONSTANT: WIDTHAD_A NUMERIC "14"
// Retrieval info: CONSTANT: WIDTH_A NUMERIC "8"
// Retrieval info: CONSTANT: WIDTH_BYTEENA_A NUMERIC "1"
// Retrieval info: USED_PORT: address 0 0 14 0 INPUT NODEFVAL "address[13..0]"
// Retrieval info: USED_PORT: clken 0 0 0 0 INPUT VCC "clken"
// Retrieval info: USED_PORT: clock 0 0 0 0 INPUT VCC "clock"
// Retrieval info: USED_PORT: data 0 0 8 0 INPUT NODEFVAL "data[7..0]"
// Retrieval info: USED_PORT: q 0 0 8 0 OUTPUT NODEFVAL "q[7..0]"
// Retrieval info: USED_PORT: rden 0 0 0 0 INPUT VCC "rden"
// Retrieval info: USED_PORT: wren 0 0 0 0 INPUT NODEFVAL "wren"
// Retrieval info: CONNECT: @address_a 0 0 14 0 address 0 0 14 0
// Retrieval info: CONNECT: @clock0 0 0 0 0 clock 0 0 0 0
// Retrieval info: CONNECT: @clocken0 0 0 0 0 clken 0 0 0 0
// Retrieval info: CONNECT: @data_a 0 0 8 0 data 0 0 8 0
// Retrieval info: CONNECT: @rden_a 0 0 0 0 rden 0 0 0 0
// Retrieval info: CONNECT: @wren_a 0 0 0 0 wren 0 0 0 0
// Retrieval info: CONNECT: q 0 0 8 0 @q_a 0 0 8 0
// Retrieval info: GEN_FILE: TYPE_NORMAL ram.vhd TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL ram.inc FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL ram.cmp TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL ram.bsf FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL ram_inst.vhd TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL ram_syn.v TRUE
// Retrieval info: LIB_FILE: altera_mf
